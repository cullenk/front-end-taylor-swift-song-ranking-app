/* Main body styling for whole application */

@import 'ngx-toastr/toastr';
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');

:root {
  --primary-color: #2E2E2E;
  --secondary-color: #266DD3;
  --hover-color: #1151aa;
  --text-color: #FFFFFF;
  --logo-text-color: #000000;
  --font-size-base: 16px;
  --padding-base: 1rem;
}

body {
    box-sizing: border-box;
  font-family: 'Inter', sans-serif;
  font-size: var(--font-size-base);
  margin: 0;
  padding: 0;
  background-color: #344055;

}

// import { Component, OnInit } from '@angular/core';
// import { CommonModule } from '@angular/common';
// import { UserProfileService } from "../../../../services/user-profile.service";
// import { AlbumService } from "../../../../services/album.service";
// import { FormGroup, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';
// import { forkJoin } from 'rxjs';
// import { Album } from '../../../../interfaces/Album';
// import { Song } from '../../../../interfaces/Song';
// import { ToastrService } from 'ngx-toastr';


// interface UserProfileSong extends Omit<Song, 'title'> {
//   slot: number;
//   albumId: string;
//   songTitle: string;  // This replaces 'title' from Song
//   albumImage?: string;
// }

// interface UserProfile {
//   username: string;
//   theme: string;
//   rankings: {
//     topThirteen: UserProfileSong[];
//   };
//   profileQuestions: Array<{ question: string; answer: string }>;
// }

// @Component({
//   selector: 'app-user-profile',
//   standalone: true,
//   imports: [CommonModule, ReactiveFormsModule, FormsModule],
//   templateUrl: './user-profile.component.html',
//   styleUrls: ['./user-profile.component.scss']
// })
// export class UserProfileComponent implements OnInit {
//   userProfile: UserProfile = {
//     theme: '',
//     username: '',
//     rankings: { topThirteen: [] },
//     profileQuestions: []
//   };  
//   defaultTheme = 'Fearless';
//   defaultQuestions = [
//     { question: 'What is your cry in the car song?', answer: 'Not answered yet' },
//     { question: 'What are your dream surprise songs?', answer: 'Not answered yet' },
//     { question: 'What album made you a Swiftie?', answer: 'Not answered yet' },
//   ];
//   themes = ['Debut', 'Fearless', 'Speak Now', 'Red', '1989', 'Reputation', 'Lover', 'Folklore', 'Evermore', 'Midnights', 'The Tortured Poets Department'];
//   themeClassMap: { [key: string]: string } = {
//     'Debut': 'Debut',
//   };
//   themeBackgrounds: { [key: string]: string } = {
//     'Debut': 'https://all-taylor-swift-album-covers.s3.us-east-2.amazonaws.com/profile+backgrounds/debut-profile-bg.jpeg',
//   }
//   questions = [
//     'What album made you a Swiftie?',
//     'What are your dream surprise songs? (Mashups allowed!)',
//     'What song would you play first for a non-swiftie?',
//     'What would be your cry in the car song?',
//     'Which song makes you have a dance party in your room?',
//     'Which song would you want to walk down the aisle to?',
//     'Hot take: What are three songs you usually skip?',
//     'Which Eras Tour set is your favorite?',
//     'Which album cover is your favorite?',
//     'What song has your favorite bridge?',
//     'What song has your favorite chorus?',
//     'What is your favorite lyric from any song?',
//     'Dream artist collaboration with Taylor?'
//   ];
//   isLoading: boolean = false;
//   loadingError: string | null = null;
//   isEditing: boolean = false;

//   constructor(
//     private userProfileService: UserProfileService,
//     private albumService: AlbumService, 
//     private toastr: ToastrService
//   ) { }

//   ngOnInit() {
//     this.loadUserProfile();
//     this.disableAudioRightClick();
//   }

//   loadUserProfile() {
//     this.isLoading = true;
//     this.loadingError = null;
//     this.userProfileService.getUserProfile().subscribe(
//       profile => {
//         this.userProfile = this.setDefaultsIfNeeded(profile);
//         this.loadTopThirteenDetails();
//       },
//       error => {
//         console.error('Error loading user profile', error);
//         this.loadingError = 'Failed to load user profile. Please try again.';
//         this.isLoading = false;
//       }
//     );
//   }

//   setDefaultsIfNeeded(profile: any) {
//     if (!profile) {
//       return {
//         username: 'New Swiftie',
//         theme: this.defaultTheme,
//         rankings: { topThirteen: [] },
//         profileQuestions: this.defaultQuestions
//       };
//     }

//     return {
//       ...profile,
//       theme: profile.theme || this.defaultTheme,
//       rankings: profile.rankings || { topThirteen: [] },
//       profileQuestions: profile.profileQuestions && profile.profileQuestions.length > 0 
//         ? profile.profileQuestions 
//         : this.defaultQuestions
//     };
//   }

//   loadTopThirteenDetails() {
//     if (this.userProfile.rankings && this.userProfile.rankings.topThirteen) {
//       const albumRequests = this.userProfile.rankings.topThirteen.map(song => 
//         this.albumService.getAlbumBySong(song.songTitle)
//       );
  
//       forkJoin<Album[]>(albumRequests).subscribe(
//         (albums: Album[]) => {
//           this.userProfile.rankings.topThirteen = this.userProfile.rankings.topThirteen.map((song, index) => ({
//             ...song,
//             albumImage: albums[index].albumImage,
//             audioSource: albums[index].songs.find(s => s.title === song.songTitle)?.audioSource
//           }));
//           // Ensure the list is sorted by slot
//           this.userProfile.rankings.topThirteen.sort((a, b) => a.slot - b.slot);
//           this.isLoading = false;
//         },
//         error => {
//           console.error('Error loading album details', error);
//           this.loadingError = 'Failed to load album details. Please try again.';
//           this.isLoading = false;
//         }
//       );
//     } else {
//       this.isLoading = false;
//     }
//   }
  
//   disableAudioRightClick() {
//     document.addEventListener('contextmenu', (e: MouseEvent) => {
//       if (e.target instanceof HTMLElement && e.target.tagName === 'AUDIO') {
//         e.preventDefault();
//       }
//     }, false);
//   }

//   getThemeClass(): string {
//     return this.themeClassMap[this.userProfile?.theme] || '';
//   }

//   getThemeBackground(): string {
//     return this.userProfile?.theme ? this.themeBackgrounds[this.userProfile.theme] : '';
//   }

//   startEditing() {
//     this.isEditing = true;
//   }

//   saveAnswers() {
//     this.isEditing = false;
//     this.updateProfileQuestions();
//   }

//   updateTheme(theme: string) {
//     if (this.userProfile) {
//       this.userProfile.theme = theme;
//       this.userProfileService.updateTheme(theme).subscribe(
//         () => this.loadUserProfile(),
//         error => console.error('Error updating theme', error)
//       );
//     }
//   }

  
//   updateProfileQuestions() {
//     if (this.userProfile && this.userProfile.profileQuestions) {
//       this.userProfileService.updateProfileQuestions(this.userProfile.profileQuestions).subscribe(
//         () => this.loadUserProfile(),
//         error => console.error('Error updating profile questions', error)
//       );
//     }
//   }

//   updateQuestionAnswer(index: number, event: any) {
//     const answer = (event.target as HTMLElement)?.textContent ?? '';
//     if (!this.userProfile.profileQuestions) {
//       this.userProfile.profileQuestions = [];
//     }
//     if (!this.userProfile.profileQuestions[index]) {
//       this.userProfile.profileQuestions[index] = { question: this.questions[index], answer: '' };
//     }
//     this.userProfile.profileQuestions[index].answer = answer || '';
//   }
  

//   shareProfile() {
//     const shareUrl = `${window.location.origin}/public-profile/${this.userProfile.username}`;
//     navigator.clipboard.writeText(shareUrl).then(() => {
//       this.toastr.success('Profile link copied to clipboard!', 'Success', {
//         timeOut: 3000
//       });
//     }, (err) => {
//       this.toastr.error('Could not copy profile link', 'Error', {
//         timeOut: 3000
//       });
//     });
//   }

// }

